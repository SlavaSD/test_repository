import unittest
from random import randint
from time import sleep

from selenium import webdriver
from selenium.webdriver.support.select import Select


class AddEmployee(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Chrome(executable_path="/Users/admin/Desktop/HRM_Summer2019/browser_drivers/chromedriver")
        self.driver.get("http://hrm-online.portnov.com/")


    def tearDown(self):
        self.driver.quit()

    # Login
    def test_something(self):
        empId = randint(100000,999999)
        expected_job_title = "QA Manager"
        expected_employment_status = "Full Time"
        expected_first_name = "Ben"
        expected_last_name = "Forta"

        driver = self.driver
        driver.find_element_by_id("txtUsername").send_keys("admin")
        driver.find_element_by_id("txtPassword").send_keys("password")
        driver.find_element_by_id("btnLogin").click()


        welcome_text = driver.find_element_by_id("welcome").text
        self.assertEqual("Welcome Admin", welcome_text,)

    # Click the Add button
        driver.find_element_by_id("btnAdd").click()
        # todo SS may need to come back later

    # Enter First Lastname
        driver.find_element_by_id("firstName").send_keys("Ben")
        driver.find_element_by_id("lastName").send_keys(expected_last_name)
    # Enter and remember the empID
        driver.find_element_by_id("employeeId").clear()
        driver.find_element_by_id("employeeId").send_keys(empId)
    # Save the Employee
        driver.find_element_by_id("btnSave").click()

        driver.find_element_by_link_text("Job").click()
        # todo SS: may need sleep
        driver.find_element_by_id("btnSave").click()
        # todo SS: may need sleep
        Select(driver.find_element_by_id("job_job_title")).select_by_visible_text(expected_job_title)
        Select(driver.find_element_by_id("job_emp_status")).select_by_visible_text(expected_employment_status)
        driver.find_element_by_id('btnSave').click()



    # Go to PIM page
        driver.find_element_by_id("menu_pim_viewPimModule").click()
    # todo may need to do somthing as well
    # Search by EmpID
        driver.find_element_by_id("empsearch_id").send_keys(empId)
        driver.find_element_by_id("searchBtn").click()

    # Expected: 1 recort back
        lst = driver.find_elements_by_xpath("//td[3]/a")
        self.assertTrue(len(lst) == 1)


    # Expected Correct Name and EmpID
        firstName = driver.find_element_by_xpath("//td[3]/a").text
        lastName = driver.find_element_by_xpath("//td[4]").text
        job_title = driver.find_element_by_xpath("//td[5]").text
        employment_status = driver.find_element_by_xpath("//td[6]").text

        message = "Expected the table to contain first name '{1}' but instead the value was '{0}'"
        self.assertEqual(expected_first_name, firstName, message.format(expected_first_name, firstName))
        self.assertEqual(expected_last_name, lastName)
        self.assertEqual(expected_job_title, job_title)
        self.assertEqual(expected_employment_status, employment_status)


    def tearDown(self):
        self.driver.quit()

if __name__ == '__main__':
    unittest.main()
